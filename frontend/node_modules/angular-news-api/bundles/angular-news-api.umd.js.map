{"version":3,"file":"angular-news-api.umd.js.map","sources":["ng://angular-news-api/lib/services/news-api-config.service.ts","ng://angular-news-api/lib/services/news-api.service.ts","ng://angular-news-api/lib/ngnews.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { NewsApiKeyConfig } from '../interfaces/newsapi.models';\n\nexport const NewsApiConfigService = new InjectionToken<NewsApiKeyConfig>('NewsApiConfig');\n","import { Injectable, Inject } from '@angular/core';\nimport NewsAPI from 'newsapi';\nimport { NewsApiConfigService } from './news-api-config.service';\nimport {\n  TopHeadlinesConfig,\n  TopHeadlinesResponse,\n  EverythingResponse,\n  EverythingConfig,\n  SourcesConfig\n} from '../interfaces/newsapi.models';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsApiService {\n  private newsApi;\n\n  constructor(@Inject(NewsApiConfigService) private newsApiConfigService) {\n    this.newsApi = new NewsAPI(this.newsApiConfigService.key);\n  }\n\n  topHeadlines(config: TopHeadlinesConfig): Observable<TopHeadlinesResponse> {\n    return from(this.newsApi.v2.topHeadlines(config));\n  }\n\n  everything(config: EverythingConfig): Observable<EverythingResponse> {\n    return from(this.newsApi.v2.everything(config));\n  }\n\n  sources(config: SourcesConfig): Observable<SourcesConfig> {\n    return from(this.newsApi.v2.sources(config));\n  }\n}\n\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NewsApiKeyConfig } from './interfaces/newsapi.models';\nimport { NewsApiConfigService } from './services/news-api-config.service';\nimport { NewsApiService } from './services/news-api.service';\n@NgModule({\n})\nexport class NgnewsModule {\n\n  static forRoot(newsApiConfig: NewsApiKeyConfig): ModuleWithProviders {\n    return {\n      ngModule: NgnewsModule,\n      providers: [\n        NewsApiService,\n        {\n          provide: NewsApiConfigService, useValue: newsApiConfig\n        }\n      ]\n    };\n  }\n}\n"],"names":["InjectionToken","from","Injectable","Inject","NgModule"],"mappings":";;;;;;;;;;;;AAAA;AAGA,QAAa,oBAAoB,GAAG,IAAIA,iBAAc,CAAmB,eAAe,CAAC;;;;;;ACHzF;QAkBE,wBAAkD,oBAAoB;YAApB,yBAAoB,GAApB,oBAAoB,CAAA;YACpE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;SAC3D;;;;;QAED,qCAAY;;;;YAAZ,UAAa,MAA0B;gBACrC,OAAOC,SAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;;;;;QAED,mCAAU;;;;YAAV,UAAW,MAAwB;gBACjC,OAAOA,SAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;aACjD;;;;;QAED,gCAAO;;;;YAAP,UAAQ,MAAqB;gBAC3B,OAAOA,SAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aAC9C;;oBApBFC,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wDAIcC,SAAM,SAAC,oBAAoB;;;;6BAlB1C;KAYA;;;;;;ACZA;QAIA;SAeC;;;;;QAXQ,oBAAO;;;;YAAd,UAAe,aAA+B;gBAC5C,OAAO;oBACL,QAAQ,EAAE,YAAY;oBACtB,SAAS,EAAE;wBACT,cAAc;wBACd;4BACE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,aAAa;yBACvD;qBACF;iBACF,CAAC;aACH;;oBAdFC,WAAQ,SAAC,EACT;;QAcD,mBAAC;KAfD;;;;;;;;;;;;;;;;;;;"}
